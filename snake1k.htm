<script>
// d = direction; 0 = up, 1 = right, 2 = down, 3 = left
// c = direction change; 0 = no change, 1 = clockwise, 3 = counterclockwise
// p = positions of snake parts
// t = generic temp variable
// e = another temp variable
// a = position of apple
// A() = placeApple()
// h = snake head
// q = coordinates separator, and also empty field for rendering
// s() = function checking whether a position is inside the snake. if so, returns 1
d = 1e7;
c = 0;
x = y = 5;
p = ["5,5"];
q = ".";
s = function(k) {
  return~p.indexOf(k);
};

(A = function() {
  // create new apple. if inside of snake => recurse
  s(a = (Math.random()*10^0)+q+new Date%10) && A()
})();

setInterval(function() {
  d += (e=[0,1,0,-1])[c];
  c = i = 0;
  t = "";

  x += e[d%4];
  y += e[(d+3)%4];

  (h = x+q+y).length>3 || s(h) ? location = t : d; // dead => reload

  p.push(h);

  // Rendering
  for (h == a ? A() : p.shift();i<100;) {
    t += (s(e = i%10 + q + (i/10^0)) ? "o" : (a==e ? "x" : q)) + (~i++%10 ? "" : "\n")
  }

  console.clear();
  console.log(t)
}, 700);
</script>
